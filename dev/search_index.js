var documenterSearchIndex = {"docs":
[{"location":"#SimplePlots.jl-1","page":"Home","title":"SimplePlots.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [SimplePlots]","category":"page"},{"location":"#SimplePlots.text-Tuple{SimplePlots.PlotText}","page":"Home","title":"SimplePlots.text","text":"text(string, args...; kw...)\n\nCreate a PlotText object wrapping a string with font info, for plot annotations. args and kw are passed to font.\n\n\n\n\n\n","category":"method"},{"location":"#SimplePlots.PlotText","page":"Home","title":"SimplePlots.PlotText","text":"Wrap a string with font info\n\n\n\n\n\n","category":"type"},{"location":"#SimplePlots.font-Tuple","page":"Home","title":"SimplePlots.font","text":"font(args...)\n\nCreate a Font from a list of features. Values may be specified either as arguments (which are distinguished by type/value) or as keyword arguments.\n\nArguments\n\nfamily: AbstractString. \"serif\" or \"sans-serif\" or \"monospace\"\npointsize: Integer. Size of font in points\nhalign: Symbol. Horizontal alignment (:hcenter, :left, or :right)\nvalign: Symbol. Vertical aligment (:vcenter, :top, or :bottom)\nrotation: Real. Angle of rotation for text in degrees (use a non-integer type)\n\nExamples\n\njulia> font(8)\njulia> font(family=\"serif\",halign=:center,rotation=45.0)\n\n\n\n\n\n","category":"method"}]
}
